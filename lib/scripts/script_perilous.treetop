# lib/scripts/script_perilous.treetop

require 'treetop'
require 'scripts/scripts'

module RoundTable::Scripts
  grammar Script
    rule receiver_operation
      receiver:term messages:("." message:(method_call / property_accessor))+ <Nodes::ReceiverOperationNode>
    end # rule receiver_operation
    
    rule property_accessor
      property:identifier "" <Nodes::PropertyAccessorNode>
    end # rule property_accessor
    
    rule method_call
      message:method_identifier "(" " "? args:argument_list? " "? ")" <Nodes::MethodCallNode>
    end # rule method_call
    
    rule expression
      receiver_operation /
      term
    end # rule expression
    
    rule term
      global_variable /
      property_accessor /
      method_call /
      literal
    end # rule term
    
    rule global_variable
      "$" identifier <Nodes::GlobalVariableNode>
    end # method global_variable
    
    rule argument_list
      arg:expression rest:("," " "? arg:expression)* <Nodes::ArgumentListNode>
    end # rule function_argument_list
    
    rule method_identifier
      (identifier / "[]") "="?
    end # method_identifier
    
    rule identifier
      [_a-zA-Z] [_a-zA-Z0-9]*
    end # rule identifier
    
    ###########################################################################
    # LITERALS
    ###########################################################################
    
    rule literal
      integer / string / symbol
    end # rule literal
    
    rule integer
      "-"? [0-9]+ <Nodes::IntegerNode>
    end # rule integer
    
    rule string
      "\"" string_section "\"" <Nodes::StringNode>
    end # rule string
    
    rule string_section
      (("\\\"" [^"]) / [^"])* <Nodes::StringSectionNode>
    end # rule string_section
    
    rule symbol
      ":" [a-zA-Z_]+ <Nodes::SymbolNode>
    end # rule symbol
  end # grammar Script
end # module RoundTable::Scripts
