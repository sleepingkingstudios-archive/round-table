# lib/scripts/script_perilous.treetop

require 'treetop'
require 'scripts/scripts'

module RoundTable::Scripts
  grammar Script
    rule script
      expr:expression rest:(";" [ \t\r\n]* script:script)? <Nodes::ScriptNode>
    end # rule script
    
    #############
    # Expressions
    
    # rule term
    #   scalar /
    #   read_global_variable /
    #   "(" expression ")"
    # end # rule term
    
    rule expression
      term /
      function_call /
      write_global_variable /
      write_property /
      read_property # this should always be last
      ""
      <Nodes::ExpressionNode>
    end # rule expression
    
    rule method_operation
      subject:term "." method:(method_call / write_property / read_property)
    end # rule method_call
    
    
    
    rule method_call
      function:method_identifier "(" " "? args:argument_list? " "? ")" <Nodes::MethodCallNode>
    end # rule method_call
    
    rule expression
      term
    end # rule expression
    
    rule term
      literal / global_variable
    end # rule term
    
    rule global_variable
      "$" identifier
    end # method global_variable
    
    rule argument_list
      arg:expression rest:("," " "? arg:expression)* <Nodes::ArgumentListNode>
    end # rule function_argument_list
    
    rule method_identifier
      (identifier / "[]") "="?
    end # method_identifier
    
    rule identifier
      [_a-zA-Z] [_a-zA-Z0-9]*
    end # rule identifier
    
    ###########################################################################
    # LITERALS
    ###########################################################################
    
    rule literal
      integer / string / symbol
    end # rule literal
    
    rule integer
      "-"? [0-9]+ <Nodes::IntegerNode>
    end # rule integer
    
    rule string
      "\"" string_section "\"" <Nodes::StringNode>
    end # rule string
    
    rule string_section
      (("\\\"" [^"]) / [^"])* <Nodes::StringSectionNode>
    end # rule string_section
    
    rule symbol
      ":" [a-zA-Z_]+ <Nodes::SymbolNode>
    end # rule symbol
    
    # DEPRECATED
    # ###########
    # # Functions
    # 
    # rule function_call
    #   function:[a-zA-Z0-9_]+ "(" " "? args:argument_list? " "? ")" <Nodes::FunctionCallNode>
    # end # rule function_call
    # 
    # ##########################
    # # Properties and Variables
    # 
    # rule read_property
    #   subject:"" property:[a-zA-Z0-9]+ <Nodes::ReadPropertyNode>
    # end # rule read_property
    # 
    # rule write_property
    #   property:[a-zA-Z0-9]+ " "? "=" " "? value:expression <Nodes::WritePropertyNode>
    # end # rule write_property
    # 
    # rule read_global_variable
    #   "$" property:[a-zA-Z0-9]+ <Nodes::ReadGlobalVariableNode>
    # end # rule read_global_variable
    # 
    # rule write_global_variable
    #   "$" property:[a-zA-Z0-9]+ " "? "=" " "? value:expression <Nodes::WriteGlobalVariableNode>
    # end # rule write_global_variable
  end # grammar Script
end # module RoundTable::Scripts
